-- Initializes a slave computer.  Requires a running master server.

-- Usage: initializeSlave [type] [params...]

local config = { ... }

local modem, side
local sides = {"top", "bottom", "left", "right", "back"}
for _, side in pairs(sides) do
	if peripheral.getType(side) == "modem" then
		modem = peripheral.wrap(side)
	end
end

if modem == nil then
	print("ERROR!  Could not find modem!")
end

local message = {
	type = "getFiles",
	computerType = table.remove(config,1)
}

local respChannel = 10000 + os.getComputerID()

modem.open(1)
modem.open(respChannel)
modem.transmit(1, respChannel, textutils.serialize(message))
modem.close(1)
local channel, code
while channel ~= respChannel do
	_, _, channel, _, code = os.pullEvent("modem_message")
end
code = textutils.unserialize(code)
local filename, text
for filename, text in pairs(code) do
	local handle = fs.open(filename, "w")
	handle.write(text)
	handle.close()
end

shell.run("startup", unpack(config))


